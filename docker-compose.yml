version: '3.8'

services:
  # Aplicação principal
  fiap-cloudgames-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: fiap-cloudgames-api
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
    depends_on:
      - sqlserver
    networks:
      - fiap-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Banco de dados SQL Server
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: fiap-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=FiapCloudGames2024!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - fiap-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P FiapCloudGames2024! -Q 'SELECT 1' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: fiap-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fiap-network
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  sqlserver_data:
    driver: local
  redis_data:
    driver: local

networks:
  fiap-network:
    driver: bridge 